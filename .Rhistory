for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print y
#retrieves the average for that interval
z <- avgStepsPerInterval[y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- 100
}
}
for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print(y)
#retrieves the average for that interval
z <- avgStepsPerInterval[y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- 100
}
}
Data3 <- dataFrame
for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print(y)
#retrieves the average for that interval
z <- avgStepsPerInterval[avgStepsPerInterval$interval==y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- 100
}
}
Data3 <- dataFrame
for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print(y)
#retrieves the average for that interval
z <- avgStepsPerInterval[avgStepsPerInterval$interval==y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- z
}
}
View(Data3)
View(Data3)
View(dataFrame)
View(dataFrame)
Data3[2020,]
View(Data3)
View(Data3)
Data3[2019,]
Data3[2018,]
gh <- group_by(Data3, date)
km <- summarise(gh, sumSteps = sum(steps))
NewStepsPerDay <- data.frame(km)
View(NewStepsPerDay)
View(NewStepsPerDay)
mean(NewStepsPerDay$sumSteps)
median(NewStepsPerDay$sumSteps)
hist(NewStepsPerDay$numSteps)
hist(NewStepsPerDay$sumSteps)
hist(sumOfStepsPerDay$sumSteps)
aa <- c(3, 6, 9)
mean(aa)
aa <- c(3, NA, 9)
mean(aa)
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l")
View(avgStepsPerInterval)
View(avgStepsPerInterval)
?weekday()
?weekday
?weekdays
?isweekday
?isWeekday
library(timeDate)
install.packages(timeDate)
install.packages("timeDate")
library(timeDate)
?isWeekday
View(Data3)
View(Data3)
weekDayBoolean <- isWeekday(Data3$date)
weekDayBoolean <- isWeekday(Data3$date[1])
weekDayBoolean
weekDayBoolean <- isWeekday(Data3$date)
weekDayBoolean
str(weekDayBoolean)
weekDayBoolean[1]
weekDayBoolean[[1]]
source('~/.active-rstudio-document', echo=TRUE)
class(weekDayBoolean)
summary(weekDayBoolean)
weekEndBoolean <- isWeekend(Data3$date)
weekEndBoolean[[1]]
Data4$dayWeek <- "Dummy Text"
Data4 <- Data3
Data4$dayWeek <- "Dummy Text"
View(Data4)
Data4$dayWeek[weekDayBoolean] <- "weekday"
View(Data4)
View(Data4)
Data4$dayWeek[weekEndBoolean] <- "weekend"
View(Data4)
View(Data4)
table(Data4$dayWeek)
Data4$dayWeek[Data4$dayWeek == "weekend", ]
Data4[Data4$dayWeek == "weekend", ]
table(Data4$dayWeek)
str(Data4)
Data4$dayWeek <- as.factor(Data4$dayWeek)
str(Data4)
table(Data4$dayWeek)
library(ggplot2)
grouping <- group_by(Data4, dayWeek, interval)
summ <- summarise(grouping, averageSteps = mean(steps))
meanStepsInterval <- data.frame(summ)
View(meanStepsInterval)
View(meanStepsInterval)
meanStepInt <- data.frame(summ)
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(. ~ dayWeek)
g2
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
options(scipen=999)
grouping <- group_by(Data4, dayWeek, interval)
summ <- summarise(grouping, averageSteps = mean(steps))
meanStepInt <- data.frame(summ)
library(ggplot2)
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(. ~ dayWeek)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
View(meanStepInt)
View(meanStepInt)
table(good2)
sum(bad)
g2 <- g + geom_line() + facet_grid(dayweek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
source('~/.active-rstudio-document', echo=TRUE)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(dayweek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(dayWeek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
View(avgStepsPerInterval)
View(avgStepsPerInterval)
View(meanStepsInterval)
View(meanStepsInterval)
library(dplyr)
library(timeDate)
options(scipen=999)
library(ggplot2)
getwd()
setwd("C:/Users/Mark Account/Documents/Software/Github/ReproduceResearchProject1/RepData_PeerAssessment1")
dataFrame <- read.csv("./activity.csv", header = TRUE)
dataFrame[,2] <- as.character(dataFrame[,2])
dataFrame[,2] <- as.Date(dataFrame[,2], format = "%Y-%m-%d")
View(dataFrame)
View(dataFrame)
good <- complete.cases(dataFrame)
CompleteData <- dataFrame[good,]
gg <- group_by(CompleteData, date)
pp <- summarise(gg, sumSteps = sum(steps))
sumOfStepsPerDay <- data.frame(pp)
hist(sumOfStepsPerDay$sumSteps)
mean(sumOfStepsPerDay$sumSteps)
median(sumOfStepsPerDay$sumSteps)
Data2 <- CompleteData
groupedByTime <- group_by(Data2, interval)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l")
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
maxi <- which.max(avgStepsPerInterval$avgSteps)
ans <- avgStepsPerInterval[maxi,1]
ans
Data3 <- dataFrame
bad <- is.na(Data3$steps)
vectorBad <- Data3[!bad,]
sum(bad)
numRows <- nrow(Data3)
for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print(y)
#retrieves the average for that interval
z <- avgStepsPerInterval[avgStepsPerInterval$interval==y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- z
}
}
Data3
View(Data3)
View(Data3)
gh <- group_by(Data3, date)
km <- summarise(gh, sumSteps = sum(steps))
NewStepsPerDay <- data.frame(km)
hist(NewStepsPerDay$sumSteps)
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day", xlab = "Number of Steps")
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day", xlab = "Number of Steps",
ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, breaks = 10, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, breaks = 5, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
hist(NewStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 40))
hist(NewStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 30))
hist(NewStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 25))
hist(sumOfStepsPerDay$sumSteps)
hist(sumOfStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 25))
hist(sumOfStepsPerDay$sumSteps)
hist(sumOfStepsPerDay$sumSteps, breaks = 15, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 20))
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)", ylim = c(0, 20))
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
mean(sumOfStepsPerDay$sumSteps)
median(sumOfStepsPerDay$sumSteps)
Data2 <- CompleteData
View(Data3)
View(Data3)
mean(NewStepsPerDay$sumSteps)
#median
median(NewStepsPerDay$sumSteps)
Data4 <- Data3
Data4$dayWeek <- "Dummy Text"
weekDayBoolean <- isWeekday(Data3$date)
weekEndBoolean <- isWeekend(Data3$date)
Data4$dayWeek[weekDayBoolean] <- "weekday"
Data4$dayWeek[weekEndBoolean] <- "weekend"
Data4$dayWeek <- as.factor(Data4$dayWeek)
grouping <- group_by(Data4, dayWeek, interval)
summ <- summarise(grouping, averageSteps = mean(steps))
meanStepInt <- data.frame(summ)
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(dayWeek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
View(NewStepsPerDay)
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
bbb <- dataFrame
str(bbb)
bbb$interval2 <- strptime(bbb$interval)
bbb$interval2 <- strptime(bbb$interval, format = "%H%M")
View(bbb)
View(bbb)
bbb$interval3 <- as.character(bbb$interval)
bbb$interval3 <- str_pad(bbb$interval, 4, "0")
bbb$interval2 <- strptime(bbb$interval, format = "%H%M")
library(stringr)
bbb$interval3 <- str_pad(bbb$interval, 4, "0")
bbb$interval3 <- str_pad(bbb$interval, 4, pad = "0")
bbb$interval2 <- strptime(bbb$interval, format = "%H%M")
View(bbb)
View(bbb)
bbb$interval2 <- strptime(bbb$interval3, format = "%H%M")
View(bbb)
View(bbb)
?strptime
bbb$interval2 <- strptime(bbb$interval3, format = "H%M")
View(bbb)
View(bbb)
bbb$interval2 <- strptime(bbb$interval3, format = "HH%M")
View(bbb)
View(bbb)
bbb$interval2 <- strptime(bbb$interval3, format = "%H%M")
View(bbb)
View(bbb)
bbb$interval2 <- strptime(bbb$interval3, format = "%H%M%S")
View(bbb)
View(bbb)
bbb$interval2 <- strptime(bbb$interval3, format = "%H%M")
View(bbb)
View(bbb)
str(bbb)
View(bbb)
View(bbb)
good <- complete.cases(bbb)
CompleteData <- bbb[good,]
groupedByTime <- group_by(bbb, interval)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
groupedByTime <- group_by(bbb, interval2)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval2, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
CompleteData4 <- bbb[good,]
groupedByTime <- group_by(CompleData4, interval2)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval2, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
CompleteData4 <- bbb[good,]
groupedByTime <- group_by(CompleteData4, interval2)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval2, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
groupedByTime <- group_by(CompleteData4, interval2)
groupedByTime <- group_by(Data2, interval)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
plot(avgStepsPerInterval$interval, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
View(avgStepsPerInterval)
View(avgStepsPerInterval)
avgStepsPerInterval$interval3 <- as.character(bbb$interval)
avgStepsPerInterval$interval3 <- as.character(avgStepsPerInterval$interval)
avgStepsPerInterval$interval3 <- str_pad(avgStepsPerInterval$interval, 4, pad = "0")
avgStepsPerInterval$interval2 <- strptime(avgStepsPerInterval$interval3, format = "%H%M")
View(avgStepsPerInterval)
View(avgStepsPerInterval)
plot(avgStepsPerInterval$interval2, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
avgStepsPerInterval$interval2 <- as.character(avgStepsPerInterval$interval)
avgStepsPerInterval$interval2 <- str_pad(avgStepsPerInterval$interval2, 4, pad = "0")
avgStepsPerInterval$interval3 <- strptime(avgStepsPerInterval$interval2, format = "%H%M")
View(avgStepsPerInterval)
View(avgStepsPerInterval)
View(avgStepsPerInterval)
View(avgStepsPerInterval)
avgStepsPerInterval$interval2 <- as.character(avgStepsPerInterval$interval)
avgStepsPerInterval$interval2 <- str_pad(avgStepsPerInterval$interval2, 4, pad = "0")
avgStepsPerInterval$interval3 <- strptime(avgStepsPerInterval$interval2, format = "%H%M")
plot(avgStepsPerInterval$interval3, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
View(avgStepsPerInterval)
View(avgStepsPerInterval)
ans
#create a histogram
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
mean(NewStepsPerDay$sumSteps)
median(NewStepsPerDay$sumSteps)
mean(sumOfStepsPerDay$sumSteps)
median(sumOfStepsPerDay$sumSteps)
g <- ggplot(meanStepInt, aes(interval, averageSteps))
g2 <- g + geom_line() + facet_grid(dayWeek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
meanStepInt$interval2 <- as.character(meanStepInt$interval)
meanStepInt$interval2 <- str_pad(meanStepInt$interval2, 4, pad = "0")
meanStepInt$interval3 <- strptime(meanStepInt$interval2, format = "%H%M")
library(ggplot2)
g <- ggplot(meanStepInt, aes(interval3, averageSteps))
g2 <- g + geom_line() + facet_grid(dayWeek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
getwd()
setwd("C:/Users/Mark Account/Documents/Software/Github/ReproduceResearchProject1/RepData_PeerAssessment1")
#unzips file and extracts it in same directory level.
unzip("./activity.zip")
#read in data file
dataFrame <- read.csv("./activity.csv", header = TRUE)
#convert the date column into a character type. It is just an intermediary step.
dataFrame[,2] <- as.character(dataFrame[,2])
#convert the date column into a Date data type.
dataFrame[,2] <- as.Date(dataFrame[,2], format = "%Y-%m-%d")
#Summarizing the Total Steps per day
library(dplyr)
#removing the rows of NA
good <- complete.cases(dataFrame)
#data set only includes complete data.
CompleteData <- dataFrame[good,]
#creates a data frame of total steps per day.
gg <- group_by(CompleteData, date)
pp <- summarise(gg, sumSteps = sum(steps))
sumOfStepsPerDay <- data.frame(pp)
#create a histogram
hist(sumOfStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
#mean
mean(sumOfStepsPerDay$sumSteps)
#median
median(sumOfStepsPerDay$sumSteps)
#Average Daily Activity Pattern
Data2 <- CompleteData
options(scipen=999)
#group by time interval
groupedByTime <- group_by(Data2, interval)
yyy <- summarise(groupedByTime, avgSteps = mean(steps))
avgStepsPerInterval <- data.frame(yyy)
#convert interval into a date-time series, so i can be plotted by time.
avgStepsPerInterval$interval2 <- as.character(avgStepsPerInterval$interval)
avgStepsPerInterval$interval2 <- str_pad(avgStepsPerInterval$interval2, 4, pad = "0")
avgStepsPerInterval$interval3 <- strptime(avgStepsPerInterval$interval2, format = "%H%M")
plot(avgStepsPerInterval$interval3, avgStepsPerInterval$avgSteps, type = "l",
main = "Average Number of Steps Per Interval", xlab = "Interval", ylab = "# of Steps")
#which interval has highest average steps?
maxi <- which.max(avgStepsPerInterval$avgSteps)
#plug index in to get the interval
ans <- avgStepsPerInterval[maxi,1]
#answer
ans
#Imputing Missing Values
Data3 <- dataFrame
#removing the rows of NA
bad <- is.na(Data3$steps)
vectorBad <- Data3[!bad,]
#calculate number of NA's
sum(bad)
#turn NA's into avg. # of steps for that interval over whole period
#need the avgStepsPerInterval Data Frame as a lookup table
numRows <- nrow(Data3)
for(x in 1:numRows){
if(is.na(Data3$steps[x])){
#y gets interval number
y <- Data3[x,3]
print(y)
#retrieves the average for that interval
z <- avgStepsPerInterval[avgStepsPerInterval$interval==y,2]
#replaces the NA with the value
print(z)
Data3$steps[x] <- z
}
}
#New Data Set with NA's filled in
Data3
#compute number of steps per day on new data set
gh <- group_by(Data3, date)
km <- summarise(gh, sumSteps = sum(steps))
NewStepsPerDay <- data.frame(km)
#create a histogram
hist(NewStepsPerDay$sumSteps, main = "Number of Steps Per Day",
xlab = "Number of Steps", ylab = "Frequency (# of Days)")
#mean
mean(NewStepsPerDay$sumSteps)
#median
median(NewStepsPerDay$sumSteps)
#weekdays vs weekends
Data4 <- Data3
Data4$dayWeek <- "Dummy Text"
library(timeDate)
weekDayBoolean <- isWeekday(Data3$date)
weekEndBoolean <- isWeekend(Data3$date)
Data4$dayWeek[weekDayBoolean] <- "weekday"
Data4$dayWeek[weekEndBoolean] <- "weekend"
Data4$dayWeek <- as.factor(Data4$dayWeek)
grouping <- group_by(Data4, dayWeek, interval)
summ <- summarise(grouping, averageSteps = mean(steps))
meanStepInt <- data.frame(summ)
meanStepInt$interval2 <- as.character(meanStepInt$interval)
meanStepInt$interval2 <- str_pad(meanStepInt$interval2, 4, pad = "0")
meanStepInt$interval3 <- strptime(meanStepInt$interval2, format = "%H%M")
library(ggplot2)
g <- ggplot(meanStepInt, aes(interval3, averageSteps))
g2 <- g + geom_line() + facet_grid(dayWeek ~ .)
g3 <- g2 + labs(title = "Average Number of Steps Per Interval", x = "Interval",
y = "Average # of Steps")
g3
View(meanStepInt)
View(meanStepInt)
library(knitr)
library(knitr)
knit2html()
library(knitr)
knit2html()
knit2html()
?knit2html
setwd("C:/Users/Mark Account/Documents/Software/Github/ReproduceResearchProject1/RepData_PeerAssessment1")
knit2html("./PA1_template.Rmd")
setwd("C:/Users/Mark Account/Documents/Software/Github/ReproduceResearchProject1/RepData_PeerAssessment1")
library(knitr)
knit2html("./PA1_template.Rmd")
